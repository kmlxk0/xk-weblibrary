<?php
global $g_boot_time;
global $g_app;
if (empty($g_boot_time)) {
    $g_boot_time = microtime(true);
    $app_config = require(dirname(__FILE__) . '/../../../config/boot.php');
    require $app_config['QEEPHP_DIR'] . '/library/q.php';
    require $app_config['APP_DIR'] . '/myapp.php';
    $g_app = MyApp::instance($app_config);
}

echo 'WebPageServiceTest';

/**
 * Test class for TagService.
 * Generated by PHPUnit on 2013-08-31 at 01:34:48.
 */
class WebPageServiceTest extends PHPUnit_Framework_TestCase {

    /**
     * @var TagService
     */
    protected $app;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * @covers WebPageService::create
     * @covers WebPageService::findByTitle
     * @covers WebPageService::remove
     */
    public function testCreateAndRemove() {
        $title = 'test-page-'.rand(100, 999);
        $page = WebPageService::create($title, "test", array("test", "public"));
        $this->assertTrue($page->id() > 0);
        $pages = WebPageService::findByTitle($title);
        $this->assertEquals(1, count($pages));
        $this->assertEquals(2, count($page->tags));
        WebPageService::remove($pages[0]);
        $this->assertEquals(0, count(WebPageService::findByTitle($title)));
        $this->assertTrue(count(WebPage::find()->getAll()) > 0);
    }

}

