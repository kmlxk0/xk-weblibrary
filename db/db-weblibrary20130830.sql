-- phpMyAdmin SQL Dump
-- version 3.2.0
-- http://www.phpmyadmin.net
--
-- 主机: localhost
-- 生成日期: 2013 年 08 月 30 日 17:51
-- 服务器版本: 5.0.67
-- PHP 版本: 5.2.9-2

SET SQL_MODE="NO_AUTO_VALUE_ON_ZERO";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;

--
-- 数据库: `weblibrary`
--

-- --------------------------------------------------------

--
-- 表的结构 `wl_webpage`
--

CREATE TABLE IF NOT EXISTS `wl_webpage` (
  `webpage_id` int(11) NOT NULL auto_increment,
  `title` varchar(200) default NULL,
  `content` text,
  `created` int(11) NOT NULL,
  `updated` int(11) NOT NULL,
  PRIMARY KEY  (`webpage_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=7 ;

--
-- 转存表中的数据 `wl_webpage`
--

INSERT INTO `wl_webpage` (`webpage_id`, `title`, `content`, `created`, `updated`) VALUES
(1, ' Visual Studio 单元测试之二---顺序单元测试 ', '<h3>        <br />    </h3>            <div>                分类：            <a href="http://blog.csdn.net/tjvictor/article/category/782923">Visual Studio 2010 单元测试</a>             2011-02-09 13:58    21515人阅读    <a href="http://blog.csdn.net/tjvictor/article/details/6175472#comments">评论</a>(0)    收藏    <a href="http://blog.csdn.net/tjvictor/article/details/6175472#report">举报</a>    </div><div><a href="http://blog.csdn.net/tag/details.html?tag=%e5%8d%95%e5%85%83%e6%b5%8b%e8%af%95">单元测试</a><a href="http://blog.csdn.net/tag/details.html?tag=%e6%b5%8b%e8%af%95">测试</a><a href="http://blog.csdn.net/tag/details.html?tag=list">list</a><a href="http://blog.csdn.net/tag/details.html?tag=basic">basic</a></div>    <div><p>&nbsp;</p><p>此文是上一篇博文：VisualStudio 单元测试之一---普通单元测试的后续篇章。如果读者对VisualStudio的单元测试不熟悉的话，请先参看上一篇。<a href="http://blog.csdn.net/tjvictor/archive/2011/02/09/6175362.aspx">http://blog.csdn.net/tjvictor/archive/2011/02/09/6175362.aspx</a></p><p>本文会自动略去上篇中提到过的相关概念、方法。本文的例子可以使用下面的链接下载：</p><p><a href="http://download.csdn.net/source/3014236">http://download.csdn.net/source/3014236</a></p><p>上一篇我们做的测试都是一个一个进行的，当然我们也可以一次性选择多个测试方法进行，但是测试运行的顺序以TestList Editor窗口中的默认列表顺序为准。在实际场景中，我们需要进行有顺序的单元测试，例如电子档案存档过程：创建电子档案-&gt;初步审核-&gt;确认无误-&gt;进行归档。那么上面四步可能每一步都是一个独立的单元测试函数，如果让它们按一定顺序执行呢？这就是我们这篇文章要讨论的。</p><p>上一篇我们已经建立了AddTest(),DivideTest(),MinusTest(),MultiplyTest()四个方法，假设就是上面电子存档的四个步骤。</p><p>右击UTProject-&gt;Add-&gt;NewTest-&gt;Ordered Test如下图:</p><p><img src="http://hi.csdn.net/attachment/201102/9/32139_1297224161tvA2.jpg" alt="11.JPG" height="433" width="504" /></p><p>&nbsp;</p><p>Note:其中Basic Unit Test是只包括[TestMethod]的单元测试文件模板，Unit Test是包括上文中提到的[ClassInitialize()],[ClassCleanup()],[TestInitialize()], [TestCleanup()]及[TestMethod]单元测试文件模板。其他模板我会在后续篇章中逐一介绍。</p><p>&nbsp;</p><p>选择OrderedTest后，我们会发现多了一个OrderedTest1.orderedtest文件(为方便，我使用了VS默认命名规则，实际应用中，大家应把文件名改成统一实名)。打开后，会出现顺序挑选窗口，如下图：</p><p><img src="http://hi.csdn.net/attachment/201102/9/32139_12972241614EJr.jpg" alt="12.JPG" height="507" width="1024" /></p><p>&nbsp;</p><p>运行方式和运行普通单元测试方法一样，在TestList Editor窗口，如下图：</p><p><img src="http://hi.csdn.net/attachment/201102/9/32139_1297224161TtkY.jpg" alt="13.JPG" height="390" width="721" /></p><p>&nbsp;</p><p>最后介绍一下如何应用Test List Editor进行单元测试用例的归类。</p><p>当测试用例多起来后，要找一个测试方法就变得十分困难，这时就需要归类了。</p><p>打开Test List Editor-&gt;右击Lists of Test-&gt;Add TestList:如下图</p><p><img src="http://hi.csdn.net/attachment/201102/9/32139_1297224161XpGg.jpg" alt="14.JPG" height="427" width="758" /></p><p>&nbsp;</p><p>将测试文件依次拖拽进新建的分类中，这样方便在多个测试方法中进行归类，查找。而且选取这个分类时，分类中的所有测试方法也一起被选中，下图显示归类后的对比图。</p><p><img src="http://hi.csdn.net/attachment/201102/9/32139_1297224162X0Ff.jpg" alt="15.JPG" height="391" width="873" /></p><p>&nbsp;</p><p>&nbsp;</p><p>至此，顺序单元测试已经全部讲完，请关注我的下一篇博文：VisualStudio 单元测试之三---压力测试</p><p>&nbsp;</p><p>如需转载，请注明本文原创自灰太狼的博客：http://blog.csdn.net/tjvictor</p></div>', 1377847602, 1377847602),
(2, ' Visual Studio 2010 单元测试之一---普通单元测试', '分类：            <a href="http://blog.csdn.net/tjvictor/article/category/782923">Visual Studio 2010 单元测试</a>             2011-02-09 11:50    34293人阅读    <a href="http://blog.csdn.net/tjvictor/article/details/6175362#comments">评论</a>(45)    收藏    <a href="http://blog.csdn.net/tjvictor/article/details/6175362#report">举报</a>    <div><a href="http://blog.csdn.net/tag/details.html?tag=%e5%8d%95%e5%85%83%e6%b5%8b%e8%af%95">单元测试</a><a href="http://blog.csdn.net/tag/details.html?tag=2010">2010</a><a href="http://blog.csdn.net/tag/details.html?tag=%e6%b5%8b%e8%af%95">测试</a><a href="http://blog.csdn.net/tag/details.html?tag=winform">winform</a><a href="http://blog.csdn.net/tag/details.html?tag=%e5%b7%a5%e4%bd%9c">工作</a><a href="http://blog.csdn.net/tag/details.html?tag=class">class</a></div>    <p>&nbsp;</p><p>&nbsp;&nbsp; &nbsp; 本文以VisualStudio 2010为例，来介绍如何在VisualStudio里面进行单元测试.</p><p>&nbsp;&nbsp; &nbsp; 首先来介绍普通单元测试，这是进行顺序测试、压力测试的基础。如果在VisualStudio 2010(2008)里面没有发现下图中的Test菜单，请用VisualStudio安装光盘进行安装，因为VisualStudio单元测试插件安装时可能不是默认选项。</p><p><img src="http://hi.csdn.net/attachment/201102/9/32139_1297224156A9d1.jpg" alt="1.JPG" height="233" width="234" /></p><p>&nbsp;</p><p>测试之前，我们要准备一些测试代码。或者从下面的链接下载完整的项目工程。</p><p><a href="http://download.csdn.net/source/3014236">http://download.csdn.net/source/3014236</a></p><p>新建一个名为AppSample的Lib。里面有一个MathUtility文件，包含加减乘除四个方法。代码如下：</p><p>namespaceTJVictor.UT.AppSample</p><p>{</p><p>&nbsp;&nbsp;&nbsp; public class MathUtility</p><p>&nbsp;&nbsp;&nbsp; {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; publicMathUtility() { }</p><p>&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static int Add(int a, int b)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; returna + b;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p><p>&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static int Minus(int a, int b)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; returna - b;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p><p>&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static int Divide(int a, int b)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; returna / b;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p><p>&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static int Multiply(int a, int b)</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; returna * b;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p><p>&nbsp;&nbsp;&nbsp; }</p><p>}</p><p>&nbsp;</p><p>创建单元测试项目有两种方法：</p><p>1．直接创建单元测试项目：File-&gt;New-&gt;Project-&gt;TestProject. 如下图：</p><p><img src="http://hi.csdn.net/attachment/201102/9/32139_1297224159QDes.jpg" alt="2.JPG" height="660" width="955" /></p><p>&nbsp;</p><p>2. 直接在需要创建单元测试的函数上创建：右击函数名-&gt;CreateUnit Tests。如下图</p><p><img src="http://hi.csdn.net/attachment/201102/9/32139_1297224160Sf0F.jpg" alt="3.JPG" height="537" width="706" /></p><p>&nbsp;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 这样就创建好了单元测试项目。VisualStudio 会自动生成一个单元测试工程。推荐使用第二种方法创建，因为第一种方法创建的只有单元测试工程，第二种方法会把单元测试函数也一起创建了出来。</p><p>&nbsp;</p><p>本文以第二种创建的方式为例，继续下一步，讲解单元测试文件。</p><p>创建好的单元测试工程如下图：</p><p><img src="http://hi.csdn.net/attachment/201102/9/32139_1297224160vZ5w.jpg" alt="4.JPG" height="215" width="234" /></p><p>其中MathUtilityTest.cs就是自动生成的单元测试文件，打开可以看到类似如下代码。</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [TestMethod()]</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public void AddTest()</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; inta = 0; // TODO: Initialize to an appropriate value</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; intb = 0; // TODO: Initialize to an appropriate value</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; intexpected = 0; // TODO: Initialize to an appropriatevalue</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; intactual;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; actual = MathUtility.Add(a,b);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Assert.AreEqual(expected,actual);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Assert.Inconclusive(&quot;Verify the correctness of this test method.&quot;);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p><p>&nbsp;</p><p>关于单元测试的各种断言，不在本文讨论范围之内。下表列出VisualStudio 2010支持的断言及相关解释。</p><table border="1" cellpadding="0" cellspacing="0"><tbody><tr><td><p>断言</p></td><td><p>解释</p></td></tr><tr><td><p>AreEqual</p></td><td><p>验证值相等</p></td></tr><tr><td><p>AreNotEqual</p></td><td><p>验证值不相等</p></td></tr><tr><td><p>AreSame</p></td><td><p>验证引用相等</p></td></tr><tr><td><p>AreNotSame</p></td><td><p>验证引用不相等</p></td></tr><tr><td><p>Inconclusive</p></td><td><p>暗示条件还未被验证</p></td></tr><tr><td><p>IsTrue</p></td><td><p>验证条件为真</p></td></tr><tr><td><p>IsFalse</p></td><td><p>验证条件为假</p></td></tr><tr><td><p>IsInstanceOfType</p></td><td><p>验证实例匹配类型</p></td></tr><tr><td><p>IsNotInstanceOfType</p></td><td><p>验证实例不匹配类型</p></td></tr><tr><td><p>IsNotNull</p></td><td><p>验证条件为NULL</p></td></tr><tr><td><p>IsNull</p></td><td><p>验证条件不为NULL</p></td></tr><tr><td><p>Fail</p></td><td><p>验证失败</p></td></tr></tbody></table><p>&nbsp;</p><p>测试函数AddTest()的属性[TestMethod()]表示这个方法是个可运行单元测试方法，区别类中的其他方法(如一些测试辅助方法)。</p><p>需要特别注意的是：Assert.Inconclusive(&quot;Verify the correctness of this test method.&quot;);语句是默认添加的，意思是这个方法是Visual Studio自动创建，运行前自删除或注释此句，否则运行结果无法通过。</p><p>按上面的步骤，把MathUtility里面的所有方法都建立相应的单元测试，然后按F6进行编译。编译后，就可以在单元测试窗口中看到我们刚刚建立的测试方法了。</p><p>Test-&gt;Windows-&gt;TestList Editor如下图：</p><p><img src="http://hi.csdn.net/attachment/201102/9/32139_129722416025NS.jpg" alt="5.JPG" height="200" width="808" /></p><p>&nbsp;</p><p>修改DivideTest代码如下：</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [TestMethod()]</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public void DivideTest()</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; inta = 100; // TODO: Initialize to an appropriate value</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; intb = 2; // TODO: Initialize to an appropriate value</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; intexpected = 50; // TODO: Initialize to an appropriatevalue</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; intactual;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; actual = MathUtility.Divide(a,b);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Assert.AreEqual(expected,actual);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //Assert.Inconclusive(&quot;Verifythe correctness of this test method.&quot;);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p><p>在Test List Editor选中DivideTest方法后，右击如下图</p><p><img src="http://hi.csdn.net/attachment/201102/9/32139_1297229263gRA3.jpg" alt="6.JPG" height="345" width="359" /></p><p>&nbsp;</p><p>1.Run Checked Tests:直接运行此单元测试函数</p><p>2.Debug Checked Tests：以Debug模式运行。在此模式下运行单元测试函数，可以在单元测试函数(DivideTest)或是被测函数(MathUtility.Divide)中加断点，则程序会自动停留在断点处。</p><p>3.Open Test:打开此测试函数的方法，相当于双击。</p><p>4.Disable:把此测试方法置为无效。</p><p>&nbsp;</p><p>&nbsp;</p><p>左击Run Checked Tests后，运行结果如下图，证明测试通过：</p><p><img src="http://hi.csdn.net/attachment/201102/9/32139_1297224160nq3g.jpg" alt="7.JPG" height="139" width="457" /></p><p>重新修改DivideTest()程序如下：</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [TestMethod()]</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public void DivideTest()</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; inta = 100; // TODO: Initialize to an appropriate value</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; intb = 2; // TODO: Initialize to an appropriate value</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; intexpected = 60; // TODO: Initialize to an appropriatevalue</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; intactual;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; actual = MathUtility.Divide(a,b);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Assert.AreEqual(expected,actual);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //Assert.Inconclusive(&quot;Verifythe correctness of this test method.&quot;);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p><p>再次运行，结果如下：</p><p><img src="http://hi.csdn.net/attachment/201102/9/32139_1297224160TgZs.jpg" alt="8.JPG" height="126" width="629" /></p><p>测试失败，原因是：期待值为60，实际值为50，断言失败。</p><p>&nbsp;</p><p>重新修改DivideTest()程序如下：</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public void DivideTest()</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; inta = 100; // TODO: Initialize to an appropriate value</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; intb = 0; // TODO: Initialize to an appropriate value</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; intexpected = 60; // TODO: Initialize to an appropriatevalue</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; intactual;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;actual = MathUtility.Divide(a,b);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Assert.AreEqual(expected,actual);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //Assert.Inconclusive(&quot;Verifythe correctness of this test method.&quot;);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p><p>这次以Debug模式运行，则程序会在return a / b;抛出异常，显示被除数不能为0.</p><p>&nbsp;</p><p>至此，一个简单的单元测试已经从头到尾跑了一遍。细心的读者一定会发现在MathUtilityTest.cs测试文件里面还有四个被注释掉的方法，下表列出了这四个方法的解释和用法。</p><table border="1" cellpadding="0" cellspacing="0"><tbody><tr><td><p>函数名</p></td><td><p>用法</p></td></tr><tr><td><p>[ClassInitialize()]</p><p>MyClassInitialize</p></td><td><p>这个方法会在每次调用测试方法前被自动调用。假设在调用AddTest(),DivideTest()等方法之前都需要初始化一些基本数据列表，则这个工作可以放在MyClassInitialize函数里面，不用分别写在每个测试方法里。</p></td></tr><tr><td><p>[ClassCleanup()]</p><p>MyClassCleanup</p></td><td><p>这个方法会在每次调用测试方法结束后被自动调用。</p></td></tr><tr><td><p>[TestInitialize()]</p><p>MyTestInitialize</p></td><td><p>这个方法会在每次启动一个测试过程前被自动调用。例如本次测试一共选择了AddTest(),DivideTest()两个测试方法，则在调用这两个方法前，MyTestInitialize会先被调用。与MyClassInitialize不同的是，MyClassInitialize是每次调用测试方法时都会被调用，相当于函数级的调用，MyTestInitialize则只在测试过程前会被调用一次，在测试过程结束前，不会再被调用，相当于过程级的调用。</p></td></tr><tr><td><p>[TestCleanup()]</p><p>MyTestCleanup</p></td><td><p>这个方法会在每次结束一个测试过程后被自动调用。</p></td></tr></tbody></table><p>&nbsp;</p><p>Visual Studio 之所谓把这四个函数注释掉，原因是这四个函数只是示意性函数(从名字中就可以看出)。关键是看这四个函数的方法属性[ClassInitialize()],[ClassCleanup()], [TestInitialize()], [TestCleanup()]只要把相关的属性加到相关的方法上，那么这个方法就具有的上面所描述的功能。</p><p>&nbsp;</p><p>单元测试适用范围：</p><p>1.验证函数正确性。对于一个函数，只要我们把相关的测试数据都写全，然后run一下，就知道是否都能通过。以后修改此方法后，只要再次run一下，就知道此次修改是否影响到了以前的测试用例，大大节省时间和提高正确率。</p><p>2.Debug程序。我们一般写后台代码时，都要写一个console或是winform小程序要调试验证所写的类是否能run起来，那么单元测试中的Debug模式就可以胜任此工作。</p><p>&nbsp;</p><p>&nbsp;</p><p>下面介绍两个使用时的小技巧。</p><p>1.可以在Test Result窗口里面导出测试结果。导出的结果包括一份测试报告和测试程序。证明此程序已经通过了报告中的所有测试用例，相当于Release了一个版本。</p><p>2.设置测试数量。每运行一次测试过程，就会生成一次测试报告和程序。VisualStudio默认次数是25，即超过25后，就会提示超出测试数次。我们可以通过下面的设置来提高次数。</p><p>Tool-&gt;Options-&gt;Test Tools-&gt;Test Execution，把里面的25改成100即可。如下图</p><p><img src="http://hi.csdn.net/attachment/201102/9/32139_1297224161hZJL.jpg" alt="9.JPG" height="382" width="644" /></p><p>至此，普通单元测试已经完成。请继续关注顺序单元测试。</p><p>&nbsp;</p><p><br /></p><p>Visual Studio 2010单元测试系列已经全部完成，以方便大家阅读，请使用<a href="http://blog.csdn.net/tjvictor/archive/2011/02/09/6175358.aspx">http://blog.csdn.net/tjvictor/archive/2011/02/09/6175358.aspx</a>来查看这一系列的所有博文。</p><p>&nbsp;</p><p>如需转载，请注明本文原创自灰太狼的博客：<a href="http://blog.csdn.net/tjvictor">http://blog.csdn.net/tjvictor</a></p>', 1377847727, 1377847727),
(3, 'C#的Enum——枚举', '<div class="posthead"><h2><br /></h2> 			Posted on <span id="post-date">2009-02-27 23:21</span> <a href="http://www.cnblogs.com/yank/">停留的风</a> 阅读(<span id="post_view_count">5043</span>) 评论(<span id="post_comment_count">13</span>)  <a href="http://www.cnblogs.com/yank/admin/EditPosts.aspx?postid=1399423" rel="nofollow">编辑</a> <a href="http://www.cnblogs.com/yank/archive/2009/02/27/1399423.html#">收藏</a></div><p><strong><span style="font-size:16px;">枚举</span></strong></p><p>　　枚举类型声明为一组相关的符号常数定义了一个类型名称。枚举用于“多项选择”场合，就是程序运行时从编译时已经设定的固定数目的“选择”中做出决定。</p><p>　　枚举类型（也称为枚举）为定义一组可以赋给变量的命名整数常量提供了一种有效的方法。例如，假设您必须定义一个变量，该变量的值表示一周中的一天。该变量只能存储七个有意义的值。若要定义这些值，可以使用枚举类型。枚举类型是使用 enum 关键字声明的。&nbsp;</p><div class="cnblogs_code"><span style="color:#0000ff;">enum</span><span style="color:#000000;">&nbsp;Days&nbsp;{&nbsp;Sunday,&nbsp;Monday,&nbsp;Tuesday,&nbsp;Wednesday,&nbsp;Thursday,&nbsp;Friday,&nbsp;Saturday&nbsp;};</span></div><p><br />　　默认情况下，枚举中每个元素的基础类型是 int。可以使用冒号指定另一种整数值类型。<br />　　如果不为枚举数列表中的元素指定值，则它们的值将以 1 为增量自动递增。在前面的示例中，Days.Sunday 的值为 0，Days.Monday 的值为 1，依此类推。创建新的 Days 对象时，如果不显式为其赋值，则它将具有默认值 Days.Sunday (0)。创建枚举时，应选择最合理的默认值并赋给它一个零值。这便使得只要在创建枚举时未为其显式赋值，则所创建的全部枚举都将具有该默认值。枚举中大小写敏感，但是建议不要这样。</p><p><span style="font-family:Arial;">　　注意：System.Enum 类型是所有枚举类型的抽象基类（它是一种与枚举类型的基础类型不同的独特类型），并且从 System.Enum 继承的成员在任何枚举类型中都可用。存在从任何枚举类型到System.Enum 的装箱转换，并且存在从 System.Enum 到任何枚举类型的取消装箱转换。</span><span style="font-family:Arial;">System.Enum 本身不是枚举类型。相反，它是一个类类型，所有枚举类型都是从它派生的。类型 System.Enum 从类型 System.ValueType派生，而后者又从类型 object 派生。在运行时，类型 System.Enum 的值可以是 null 或是对任何枚举类型的装了箱的值的引用。</span></p><p><strong>枚举的优点：</strong><br />　　&lt;1&gt;枚举可以使代码更易于维护，有助于确保给变量指定合法的、期望的值。<br /><br />　　&lt;2&gt;枚举使代码更清晰，允许用描述性的名称表示整数值，而不是用含义模糊的数来表示。<br /><br />　　&lt;3&gt;枚举使代码更易于键入。在给枚举类型的实例赋值时，VS.NET IDE会通过IntelliSense弹出一个包含可接受值的列表框，减少了按键次数，并能够让我们回忆起可能的值</p><p><strong>枚举实例</strong></p><p>　　声明：<span style="color:#000000;">&nbsp; </span></p><div class="cnblogs_code"><span style="color:#0000ff;">public</span><span style="color:#000000;">&nbsp;</span><span style="color:#0000ff;">enum</span><span style="color:#000000;">&nbsp;TimeOfDay<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;Moning&nbsp;</span><span style="color:#000000;">=</span><span style="color:#000000;">&nbsp;</span><span style="color:#800080;">0</span><span style="color:#000000;">,<br />&nbsp;&nbsp;&nbsp;&nbsp;Afternoon&nbsp;</span><span style="color:#000000;">=</span><span style="color:#000000;">&nbsp;</span><span style="color:#800080;">1</span><span style="color:#000000;">,<br />&nbsp;&nbsp;&nbsp;&nbsp;Evening&nbsp;</span><span style="color:#000000;">=</span><span style="color:#000000;">&nbsp;</span><span style="color:#800080;">2</span><span style="color:#000000;">,<br />};</span></div><p>　　使用：&nbsp;</p><div class="cnblogs_code"><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div><span style="color:#000000;">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:#0000ff;">public</span><span style="color:#000000;">&nbsp;</span><span style="color:#0000ff;">string</span><span style="color:#000000;">&nbsp;getTimeOfDay(TimeOfDay&nbsp;time)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:#0000ff;">string</span><span style="color:#000000;">&nbsp;result&nbsp;</span><span style="color:#000000;">=</span><span style="color:#000000;">&nbsp;</span><span style="color:#0000ff;">string</span><span style="color:#000000;">.Empty;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:#0000ff;">switch</span><span style="color:#000000;">&nbsp;(time)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:#0000ff;">case</span><span style="color:#000000;">&nbsp;TimeOfDay.Moning:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result&nbsp;</span><span style="color:#000000;">=</span><span style="color:#000000;">&nbsp;</span><span style="color:#800000;">&quot;</span><span style="color:#800000;">上午</span><span style="color:#800000;">&quot;</span><span style="color:#000000;">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:#0000ff;">break</span><span style="color:#000000;">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:#0000ff;">case</span><span style="color:#000000;">&nbsp;TimeOfDay.Afternoon:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result&nbsp;</span><span style="color:#000000;">=</span><span style="color:#000000;">&nbsp;</span><span style="color:#800000;">&quot;</span><span style="color:#800000;">下午</span><span style="color:#800000;">&quot;</span><span style="color:#000000;">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:#0000ff;">break</span><span style="color:#000000;">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:#0000ff;">case</span><span style="color:#000000;">&nbsp;TimeOfDay.Evening:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result&nbsp;</span><span style="color:#000000;">=</span><span style="color:#000000;">&nbsp;</span><span style="color:#800000;">&quot;</span><span style="color:#800000;">晚上</span><span style="color:#800000;">&quot;</span><span style="color:#000000;">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:#0000ff;">break</span><span style="color:#000000;">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:#0000ff;">default</span><span style="color:#000000;">:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result&nbsp;</span><span style="color:#000000;">=</span><span style="color:#000000;">&nbsp;</span><span style="color:#800000;">&quot;</span><span style="color:#800000;">未知</span><span style="color:#800000;">&quot;</span><span style="color:#000000;">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:#0000ff;">break</span><span style="color:#000000;">;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:#0000ff;">return</span><span style="color:#000000;">&nbsp;result;<br />&nbsp;&nbsp;&nbsp;&nbsp;}</span><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div></div><p>&nbsp;</p><p><strong>枚举方法</strong>&nbsp;</p><p>　　&lt;1&gt;获取枚举字符串</p><div class="cnblogs_code"><span style="color:#000000;">TimeOfDay&nbsp;time&nbsp;</span><span style="color:#000000;">=</span><span style="color:#000000;">&nbsp;TimeOfDay.Afternoon;<br /><br />Console.WriteLine(time.ToString());</span><span style="color:#008000;">//</span><span style="color:#008000;">输出：Afternoon</span><span style="color:#008000;"><br /></span></div><p>&nbsp;</p><p>　　&lt;2&gt;Enum.Parse()方法。<span style="font-family:宋体;">这个方法带</span><span lang="EN-US">3</span><span style="font-family:宋体;">个参数，第一个参数是要使用的枚举类型。其语法是关键字</span><span lang="EN-US">typeof</span><span style="font-family:宋体;">后跟放在括号中的枚举类名。</span><span lang="EN-US">typeof</span><span style="font-family:宋体;">运算符将在第</span><span lang="EN-US">5</span><span style="font-family:宋体;">章详细论述。第二个参数是要转换的字符串，第三个参数是一个</span><span lang="EN-US">bool</span><span style="font-family:宋体;">，指定在进行转换时是否忽略大小写。最后，注意</span><span lang="EN-US">Enum.Parse()</span><span style="font-family:宋体;">方法实际上返回一个对象引用<span style="letter-spacing: -1.2pt;">——</span></span><span style="letter-spacing: -1.2pt;"> </span><span style="font-family:宋体;">我们需要把这个字符串显式转换为需要的枚举类型</span><span lang="EN-US">(</span><span style="font-family:宋体;">这是一个取消装箱操作的例子</span><span lang="EN-US">)</span><span style="font-family:宋体;">。对于上面的代码，将返回</span><span lang="EN-US">1</span><span style="font-family:宋体;">，作为一个对象，对应于</span><span lang="EN-US">TimeOfDay.Afternoon</span><span style="font-family:宋体;">的枚举值。在显式转换为</span><span lang="EN-US">int</span><span style="font-family:宋体;">时，会再次生成</span><span lang="EN-US">1。</span></p><div class="cnblogs_code"><span style="color:#000000;">TimeOfDay&nbsp;time2&nbsp;</span><span style="color:#000000;">=</span><span style="color:#000000;">&nbsp;(TimeOfDay)&nbsp;Enum.Parse(</span><span style="color:#0000ff;">typeof</span><span style="color:#000000;">(TimeOfDay),&nbsp;</span><span style="color:#800000;">&quot;</span><span style="color:#800000;">afternoon</span><span style="color:#800000;">&quot;</span><span style="color:#000000;">,&nbsp;</span><span style="color:#0000ff;">true</span><span style="color:#000000;">);<br /><br />Console.WriteLine((</span><span style="color:#0000ff;">int</span><span style="color:#000000;">)time2);</span><span style="color:#008000;">//</span><span style="color:#008000;">输出1</span><span style="color:#008000;"><br /></span></div><p>&nbsp;</p><p>　　&lt;3&gt;得到枚举的某一值对应的名称</p><div class="cnblogs_code"><span style="color:#000000;">lbOne.Text&nbsp;</span><span style="color:#000000;">=</span><span style="color:#000000;">&nbsp;Enum.GetName(</span><span style="color:#0000ff;">typeof</span><span style="color:#000000;">(TimeOfDay),&nbsp;</span><span style="color:#800080;">0</span><span style="color:#000000;">);</span></div><div class="cnblogs_code"><span style="color:#000000;">lbOne.Text&nbsp;</span><span style="color:#000000;">=</span><span style="color:#000000;">&nbsp;((TimeOfDay)</span><span style="color:#800080;">0</span><span style="color:#000000;">).ToString();</span><span style="color:#008000;">//</span><span style="color:#008000;">返回：Morning</span></div><p>&nbsp;</p><p>两种方法都能实现，但是当其值越界（不是枚举所列出的值），就有一定的区别了。大家可以根据自己的需求不同，选择合适的方法。</p><div class="cnblogs_code"><span style="color:#000000;">lbCon.Text&nbsp;</span><span style="color:#000000;">=</span><span style="color:#000000;">&nbsp;((TimeOfDay)</span><span style="color:#800080;">5</span><span style="color:#000000;">).ToString();&nbsp;</span><span style="color:#008000;">//</span><span style="color:#008000;">返回：5，如果越界返回原值</span><span style="color:#008000;"><br /></span><span style="color:#000000;"><br /></span><span style="color:#0000ff;">this</span><span style="color:#000000;">.lbGetName.Text&nbsp;</span><span style="color:#000000;">=</span><span style="color:#000000;">&nbsp;Enum.GetName(</span><span style="color:#0000ff;">typeof</span><span style="color:#000000;">(TimeOfDay),&nbsp;</span><span style="color:#800080;">5</span><span style="color:#000000;">);&nbsp;</span><span style="color:#008000;">//</span><span style="color:#008000;">返回：空字符串，如果越界返回空字符串</span></div><p>&nbsp;</p><p>&nbsp;&nbsp;　 &lt;4&gt;得到枚举的所有的值&nbsp;</p><div class="cnblogs_code"><span style="color:#0000ff;">foreach</span><span style="color:#000000;">&nbsp;(</span><span style="color:#0000ff;">int</span><span style="color:#000000;">&nbsp;i&nbsp;</span><span style="color:#0000ff;">in</span><span style="color:#000000;">&nbsp;Enum.GetValues(</span><span style="color:#0000ff;">typeof</span><span style="color:#000000;">(TimeOfDay)))<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lbValues.Text&nbsp;</span><span style="color:#000000;">+=</span><span style="color:#000000;">&nbsp;i.ToString();</span></div><p>&nbsp;&nbsp;　　&lt;5&gt;枚举所有的名称&nbsp;</p><div class="cnblogs_code"><span style="color:#0000ff;">foreach</span><span style="color:#000000;">(</span><span style="color:#0000ff;">string</span><span style="color:#000000;">&nbsp;temp&nbsp;</span><span style="color:#0000ff;">in</span><span style="color:#000000;">&nbsp;Enum.GetNames(</span><span style="color:#0000ff;">typeof</span><span style="color:#000000;">(TimeOfDay)))<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lbNames.Text</span><span style="color:#000000;">+=</span><span style="color:#000000;">temp;</span></div><p>&nbsp;&nbsp;</p><p><strong>枚举和常量</strong></p><p>　　优先考虑枚举。</p><p>　　在C#中，枚举的真正强大之处是它们在后台会实例化为派生于基类System.Enum的结构。这表示可以对它们调用方法，执行有用的任务。注意因为.NET Framework的执行方式，在语法上把枚举当做结构是不会有性能损失的。实际上，一旦代码编译好，枚举就成为基本类型，与int和float类似。</p><p>　　但是在实际应用中，你也许会发现，我们经常用英语定义枚举类型，因为开发工具本来就是英文开发的，美国人用起来，就直接能够明白枚举类型的含义。其实，我们在开发的时候就多了一步操作，需要对枚举类型进行翻译。没办法，谁让编程语言是英语写的，如果是汉语写的，那我们也就不用翻译了，用起枚举变得很方便了。举个简单的例子，TimeOfDay.Morning一看到Morning，美国人就知道是上午，但是对于中国的使用者来说，可能有很多人就看不懂，这就需要我们进行翻译、解释，就向上面的getTimeOfDay()的方法，其实就是做了翻译工作。所以，在使用枚举的时候，感觉到并不是很方便，有的时候我们还是比较乐意创建常量，然后在类中，声明一个集合来容纳常量和其意义。</p><p>　　使用常量定义：这种方法固然可行，但是不能保证传入的参数day就是实际限定的。</p><div class="cnblogs_code"><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div><span style="color:#0000ff;">using</span><span style="color:#000000;">&nbsp;System;<br /></span><span style="color:#0000ff;">using</span><span style="color:#000000;">&nbsp;System.Collections.Generic;<br /><br /></span><span style="color:#0000ff;">public</span><span style="color:#000000;">&nbsp;</span><span style="color:#0000ff;">class</span><span style="color:#000000;">&nbsp;TimesOfDay<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:#0000ff;">public</span><span style="color:#000000;">&nbsp;</span><span style="color:#0000ff;">const</span><span style="color:#000000;">&nbsp;</span><span style="color:#0000ff;">int</span><span style="color:#000000;">&nbsp;Morning&nbsp;</span><span style="color:#000000;">=</span><span style="color:#000000;">&nbsp;</span><span style="color:#800080;">0</span><span style="color:#000000;">;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:#0000ff;">public</span><span style="color:#000000;">&nbsp;</span><span style="color:#0000ff;">const</span><span style="color:#000000;">&nbsp;</span><span style="color:#0000ff;">int</span><span style="color:#000000;">&nbsp;Afternoon&nbsp;</span><span style="color:#000000;">=</span><span style="color:#000000;">&nbsp;</span><span style="color:#800080;">1</span><span style="color:#000000;">;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:#0000ff;">public</span><span style="color:#000000;">&nbsp;</span><span style="color:#0000ff;">const</span><span style="color:#000000;">&nbsp;</span><span style="color:#0000ff;">int</span><span style="color:#000000;">&nbsp;Evening&nbsp;</span><span style="color:#000000;">=</span><span style="color:#000000;">&nbsp;</span><span style="color:#800080;">2</span><span style="color:#000000;">;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:#0000ff;">public</span><span style="color:#000000;">&nbsp;</span><span style="color:#0000ff;">static</span><span style="color:#000000;">&nbsp;Dictionary</span><span style="color:#000000;">&lt;</span><span style="color:#0000ff;">int</span><span style="color:#000000;">,&nbsp;</span><span style="color:#0000ff;">string</span><span style="color:#000000;">&gt;</span><span style="color:#000000;">&nbsp;list;<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:#808080;">///</span><span style="color:#008000;">&nbsp;</span><span style="color:#808080;">&lt;summary&gt;</span><span style="color:#008000;"><br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:#808080;">///</span><span style="color:#008000;">&nbsp;获得星期几<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:#808080;">///</span><span style="color:#008000;">&nbsp;</span><span style="color:#808080;">&lt;/summary&gt;</span><span style="color:#008000;"><br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:#808080;">///</span><span style="color:#008000;">&nbsp;</span><span style="color:#808080;">&lt;param&nbsp;name=&quot;day&quot;&gt;&lt;/param&gt;</span><span style="color:#008000;"><br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:#808080;">///</span><span style="color:#008000;">&nbsp;</span><span style="color:#808080;">&lt;returns&gt;&lt;/returns&gt;</span><span style="color:#808080;"><br /></span><span style="color:#000000;">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:#0000ff;">public</span><span style="color:#000000;">&nbsp;</span><span style="color:#0000ff;">static</span><span style="color:#000000;">&nbsp;</span><span style="color:#0000ff;">string</span><span style="color:#000000;">&nbsp;getTimeNameOfDay(</span><span style="color:#0000ff;">int</span><span style="color:#000000;">&nbsp;time)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:#0000ff;">if</span><span style="color:#000000;">&nbsp;(list&nbsp;</span><span style="color:#000000;">==</span><span style="color:#000000;">&nbsp;</span><span style="color:#0000ff;">null</span><span style="color:#000000;">&nbsp;</span><span style="color:#000000;">||</span><span style="color:#000000;">&nbsp;list.Count&nbsp;</span><span style="color:#000000;">&lt;=</span><span style="color:#000000;">&nbsp;</span><span style="color:#800080;">0</span><span style="color:#000000;">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;list&nbsp;</span><span style="color:#000000;">=</span><span style="color:#000000;">&nbsp;</span><span style="color:#0000ff;">new</span><span style="color:#000000;">&nbsp;Dictionary</span><span style="color:#000000;">&lt;</span><span style="color:#0000ff;">int</span><span style="color:#000000;">,&nbsp;</span><span style="color:#0000ff;">string</span><span style="color:#000000;">&gt;</span><span style="color:#000000;">();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;list.Add(Morning,&nbsp;</span><span style="color:#800000;">&quot;</span><span style="color:#800000;">上午</span><span style="color:#800000;">&quot;</span><span style="color:#000000;">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;list.Add(Afternoon,&nbsp;</span><span style="color:#800000;">&quot;</span><span style="color:#800000;">下午</span><span style="color:#800000;">&quot;</span><span style="color:#000000;">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;list.Add(Evening,&nbsp;</span><span style="color:#800000;">&quot;</span><span style="color:#800000;">晚上</span><span style="color:#800000;">&quot;</span><span style="color:#000000;">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color:#0000ff;">return</span><span style="color:#000000;">&nbsp;list[time];<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}<br /><br /></span><div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div></div><p><strong><span style="color:#ff0000;"><a href="http://www.cnblogs.com/yank/archive/2011/09/08/EnumDisplayInChinese.html"><span style="color:#ff0000;">中文显示问题请点击这里</span></a></span></strong></p>', 1377847757, 1377847757),
(4, '“LED Icon Set” v1.0', '<div class="entrytitle"> <h3>May 19th, 2009</h3></div><div class="entrybody"><p><a rel="nofollow" href="http://led24.de/iconset/led-icons.zip">LED Icon Set</a> v1.0 are designed for web designers/developers by led24.de. These .png icons make a professionally looking small icon set and are totally free in commercial and open source apps / websites.</p><div id="attachment_17" class="wp-caption alignright" style="width: 253px"><a title="Download PNG Icon Set" href="http://led24.de/iconset/led-icons.zip" rel="nofollow" target="_blank"><img class="right size-full wp-image-17 " title="LED Icon Set" src="http://led24.de/iconset/wp-content/uploads/2009/05/512-small.gif" alt="LED Icon Set" height="263" width="243" /></a><p class="wp-caption-text">Preview picture</p></div><p>What are the metaphors on which this 500+ free web icon set is based? Three icons sets should be mentioned (in order of date of release), that were important for us. To read about the history, <a title="3 icons sets" href="http://led24.de/iconset/free-icons/" rel="nofollow">click here</a>.</p><p>You can do whatever you want with these icons (use on web or in desktop applications) as long as you don’t pass them off as your own and remove this readme file. A credit statement and a link back to<br /><a href="http://led24.de/iconset/">http://led24.de/iconset/</a> or <a href="http://led24.de/">http://led24.de/</a> would be appreciated.</p><h1 style="text-align: center;"><a href="http://led24.de/iconset/led-icons.zip" rel="nofollow"><span style="color:#ff0000;">Download</span></a></h1><p><a rel="nofollow" href="http://led24.de/iconset/led-icons.zip">.zip Format | 0.32 Mb | 16×16 .png Icons </a><br /><a href="http://led24.de/iconset/led-icon-preview.png" rel="nofollow">Preview</a></p><p><strong>Spread Icons</strong><br />If you find these icons interesting we would like you to pass them on to other who you think might appreciate the set. The URL to share is: http://led24.de/iconset/<br /><strong><em>Important</em></strong>, link to this post when sharing the Icons, do not upload the .zip file anywhere else.</p></div>', 1377855875, 1377855875);
INSERT INTO `wl_webpage` (`webpage_id`, `title`, `content`, `created`, `updated`) VALUES
(5, 'jQuery Media Plugin', '<div aria-hidden="false" aria-expanded="true" role="tabpanel" aria-labelledby="ui-id-1" id="overview" class="tabContent ui-tabs-panel ui-widget-content ui-corner-bottom">        <h1></h1><h1 style="font-family: ''trebuchet ms'', verdana, arial; padding: 15px 10px 15px 0px; margin: 0px;font-size:18px; clear: left; color: rgb(34, 34, 34); ">Overview</h1><span style="color: rgb(34, 34, 34); font-family: ''lucida grande'', helvetica, verdana, arial, sans-serif; font-size: 18px; ">The jQuery Media Plugin supports unobtrusive conversion of standard markup into rich media content. It can be used to embed virtually any media type, including Flash, Quicktime, Windows Media Player, Real Player, MP3, Silverlight, PDF and more, into a web page.</span><span style="color: rgb(34, 34, 34); font-family: ''lucida grande'', helvetica, verdana, arial, sans-serif; font-size: 18px; ">&nbsp;The plugin converts an element (usually an&nbsp;</span><code style="padding: 0px; font-size: 15px; color: rgb(34, 34, 34); ">&lt;a&gt;</code><span style="color: rgb(34, 34, 34); font-family: ''lucida grande'', helvetica, verdana, arial, sans-serif; font-size: 18px; ">) into a&nbsp;</span><code style="padding: 0px; font-size: 15px; color: rgb(34, 34, 34); ">&lt;div&gt;</code><span style="color: rgb(34, 34, 34); font-family: ''lucida grande'', helvetica, verdana, arial, sans-serif; font-size: 18px; ">&nbsp;which holds the</span><code style="padding: 0px; font-size: 15px; color: rgb(34, 34, 34); ">object</code><span style="color: rgb(34, 34, 34); font-family: ''lucida grande'', helvetica, verdana, arial, sans-serif; font-size: 18px; ">,&nbsp;</span><code style="padding: 0px; font-size: 15px; color: rgb(34, 34, 34); ">embed</code><span style="color: rgb(34, 34, 34); font-family: ''lucida grande'', helvetica, verdana, arial, sans-serif; font-size: 18px; ">&nbsp;or&nbsp;</span><code style="padding: 0px; font-size: 15px; color: rgb(34, 34, 34); ">iframe</code><span style="color: rgb(34, 34, 34); font-family: ''lucida grande'', helvetica, verdana, arial, sans-serif; font-size: 18px; ">&nbsp;tags neccessary to render the media content.</span><p style="margin: 10px 0px; color: rgb(34, 34, 34); font-family: ''lucida grande'', helvetica, verdana, arial, sans-serif; font-size: 18px; ">For example, running this script:</p><pre style="margin-top: 10px;font-size:12px; padding: 15px; background-color: rgb(238, 238, 238); border-width: 1px 1px 1px 5px; border-style: solid; border-color: rgb(221, 221, 221); overflow-x: auto; color: rgb(34, 34, 34); "><code class="mix" style="padding: 0px; font-size: 13px; "><span class="jquery" style="color: rgb(0, 0, 170); ">$</span>(<span class="string" style="color: teal; ">''.media''</span>).media();</code></pre><span style="color: rgb(34, 34, 34); font-family: ''lucida grande'', helvetica, verdana, arial, sans-serif; font-size: 18px; ">For this markup:</span><pre style="margin-top: 10px;font-size:12px; padding: 15px; background-color: rgb(238, 238, 238); border-width: 1px 1px 1px 5px; border-style: solid; border-color: rgb(221, 221, 221); overflow-x: auto; color: rgb(34, 34, 34); "><code class="mix" style="padding: 0px; font-size: 13px; "><span class="tag" style="color: blue; ">&lt;a</span><span class="aname" style="color: maroon; ">&nbsp;class</span>=<span class="string" style="color: teal; ">&quot;media&quot;</span><span class="aname" style="color: maroon; ">&nbsp;href</span>=<span class="string" style="color: teal; ">&quot;sample.mov&quot;</span><span class="tag" style="color: blue; ">&gt;</span>My&nbsp;Quicktime&nbsp;Movie<span class="tag" style="color: blue; ">&lt;/a&gt;</span>&nbsp;\r\n<span class="tag" style="color: blue; ">&lt;a</span><span class="aname" style="color: maroon; ">&nbsp;class</span>=<span class="string" style="color: teal; ">&quot;media&quot;</span><span class="aname" style="color: maroon; ">&nbsp;href</span>=<span class="string" style="color: teal; ">&quot;sample.swf&quot;</span><span class="tag" style="color: blue; ">&gt;</span>My&nbsp;Flash&nbsp;Movie<span class="tag" style="color: blue; ">&lt;/a&gt;</span>&nbsp;\r\n<span class="tag" style="color: blue; ">&lt;a</span><span class="aname" style="color: maroon; ">&nbsp;class</span>=<span class="string" style="color: teal; ">&quot;media&quot;</span><span class="aname" style="color: maroon; ">&nbsp;href</span>=<span class="string" style="color: teal; ">&quot;sample.wma&quot;</span><span class="tag" style="color: blue; ">&gt;</span>My&nbsp;Audio&nbsp;File<span class="tag" style="color: blue; ">&lt;/a&gt;</span>&nbsp;\r\n</code></pre><span style="color: rgb(34, 34, 34); font-family: ''lucida grande'', helvetica, verdana, arial, sans-serif; font-size: 18px; ">will result in this</span><sup style="color: rgb(34, 34, 34); font-family: ''lucida grande'', helvetica, verdana, arial, sans-serif; ">1</sup><span style="color: rgb(34, 34, 34); font-family: ''lucida grande'', helvetica, verdana, arial, sans-serif; font-size: 18px; ">:</span><pre style="margin-top: 10px;font-size:12px; padding: 15px; background-color: rgb(238, 238, 238); border-width: 1px 1px 1px 5px; border-style: solid; border-color: rgb(221, 221, 221); overflow-x: auto; color: rgb(34, 34, 34); "><code class="mix" style="padding: 0px; font-size: 13px; "><span class="tag" style="color: blue; ">&lt;div</span><span class="aname" style="color: maroon; ">&nbsp;class</span>=<span class="string" style="color: teal; ">&quot;media&quot;</span><span class="tag" style="color: blue; ">&gt;</span>&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="color: blue; ">&lt;object</span><span class="aname" style="color: maroon; ">&nbsp;codebase</span>=<span class="string" style="color: teal; ">&quot;http://www.apple.com/qtactivex/qtplugin.cab&quot;</span><span class="aname" style="color: maroon; ">&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;classid</span>=<span class="string" style="color: teal; ">&quot;clsid:02BF25D5-8C17-4B23-BC80-D3488ABDDC6B&quot;</span><span class="tag" style="color: blue; ">&gt;</span>&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="color: blue; ">&lt;param</span><span class="aname" style="color: maroon; ">&nbsp;name</span>=<span class="string" style="color: teal; ">&quot;src&quot;</span><span class="aname" style="color: maroon; ">&nbsp;value</span>=<span class="string" style="color: teal; ">&quot;sample.mov&quot;</span><span class="tag" style="color: blue; ">&gt;</span>&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="color: blue; ">&lt;embed</span><span class="aname" style="color: maroon; ">&nbsp;src</span>=<span class="string" style="color: teal; ">&quot;sample.mov&quot;</span><span class="aname" style="color: maroon; ">&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pluginspage</span>=<span class="string" style="color: teal; ">&quot;http://www.apple.com/quicktime/download/&quot;</span><span class="tag" style="color: blue; ">&gt;</span><span class="tag" style="color: blue; ">&lt;/embed&gt;</span>&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="color: blue; ">&lt;/object&gt;</span>&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="color: blue; ">&lt;div</span><span class="tag" style="color: blue; ">&gt;</span>My&nbsp;Quicktime&nbsp;Movie<span class="tag" style="color: blue; ">&lt;/div&gt;</span>&nbsp;\r\n<span class="tag" style="color: blue; ">&lt;/div&gt;</span>&nbsp;\r\n&nbsp;\r\n<span class="tag" style="color: blue; ">&lt;div</span><span class="aname" style="color: maroon; ">&nbsp;class</span>=<span class="string" style="color: teal; ">&quot;media&quot;</span><span class="tag" style="color: blue; ">&gt;</span>&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="color: blue; ">&lt;object</span><span class="aname" style="color: maroon; ">&nbsp;codebase</span>=<span class="string" style="color: teal; ">&quot;http://fpdownload.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=7&quot;</span><span class="aname" style="color: maroon; ">&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;classid</span>=<span class="string" style="color: teal; ">&quot;clsid:d27cdb6e-ae6d-11cf-96b8-444553540000&quot;</span><span class="aname" style="color: maroon; ">&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type</span>=<span class="string" style="color: teal; ">&quot;application/x-oleobject&quot;</span><span class="tag" style="color: blue; ">&gt;</span>&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="color: blue; ">&lt;param</span><span class="aname" style="color: maroon; ">&nbsp;name</span>=<span class="string" style="color: teal; ">&quot;src&quot;</span><span class="aname" style="color: maroon; ">&nbsp;value</span>=<span class="string" style="color: teal; ">&quot;sample.swf&quot;</span><span class="tag" style="color: blue; ">&gt;</span>&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="color: blue; ">&lt;embed</span><span class="aname" style="color: maroon; ">&nbsp;src</span>=<span class="string" style="color: teal; ">&quot;sample.swf&quot;</span><span class="aname" style="color: maroon; ">&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type</span>=<span class="string" style="color: teal; ">&quot;application/x-shockwave-flash&quot;</span><span class="aname" style="color: maroon; ">&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pluginspage</span>=<span class="string" style="color: teal; ">&quot;http://www.adobe.com/go/getflashplayer&quot;</span><span class="tag" style="color: blue; ">&gt;</span><span class="tag" style="color: blue; ">&lt;/embed&gt;</span>&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="color: blue; ">&lt;/object&gt;</span>&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="color: blue; ">&lt;div</span><span class="tag" style="color: blue; ">&gt;</span>My&nbsp;Flash&nbsp;Movie<span class="tag" style="color: blue; ">&lt;/div&gt;</span>&nbsp;\r\n<span class="tag" style="color: blue; ">&lt;/div&gt;</span>&nbsp;\r\n&nbsp;\r\n<span class="tag" style="color: blue; ">&lt;div</span><span class="aname" style="color: maroon; ">&nbsp;class</span>=<span class="string" style="color: teal; ">&quot;media&quot;</span><span class="tag" style="color: blue; ">&gt;</span>&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="color: blue; ">&lt;object</span><span class="aname" style="color: maroon; ">&nbsp;codebase</span>=<span class="string" style="color: teal; ">&quot;http://www.apple.com/qtactivex/qtplugin.cab&quot;</span><span class="aname" style="color: maroon; ">&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;classid</span>=<span class="string" style="color: teal; ">&quot;clsid:6BF52A52-394A-11d3-B153-00C04F79FAA6&quot;</span><span class="aname" style="color: maroon; ">&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type</span>=<span class="string" style="color: teal; ">&quot;application/x-oleobject&quot;</span><span class="tag" style="color: blue; ">&gt;</span>&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="color: blue; ">&lt;param</span><span class="aname" style="color: maroon; ">&nbsp;name</span>=<span class="string" style="color: teal; ">&quot;url&quot;</span><span class="aname" style="color: maroon; ">&nbsp;value</span>=<span class="string" style="color: teal; ">&quot;sample.wma&quot;</span><span class="tag" style="color: blue; ">&gt;</span>&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="color: blue; ">&lt;embed</span><span class="aname" style="color: maroon; ">&nbsp;src</span>=<span class="string" style="color: teal; ">&quot;sample.wma&quot;</span><span class="aname" style="color: maroon; ">&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type</span>=<span class="string" style="color: teal; ">&quot;application/x-mplayer2&quot;</span><span class="aname" style="color: maroon; ">&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pluginspage</span>=<span class="string" style="color: teal; ">&quot;http://www.microsoft.com/Windows/MediaPlayer/&quot;</span><span class="tag" style="color: blue; ">&gt;</span><span class="tag" style="color: blue; ">&lt;/embed&gt;</span>&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="color: blue; ">&lt;/object&gt;</span>&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag" style="color: blue; ">&lt;div</span><span class="tag" style="color: blue; ">&gt;</span>My&nbsp;Audio&nbsp;File<span class="tag" style="color: blue; ">&lt;/div&gt;</span>&nbsp;\r\n<span class="tag" style="color: blue; ">&lt;/div&gt;</span>&nbsp;\r\n&nbsp;</code></pre><span class="note"></span></div>', 1377856013, 1377856013),
(6, '8个实现在线浏览PDF文件的实用jQuery插件', '<div class="postheader" id="h-0" style="margin: 0px 0px 0px 74px; padding: 0px; position: relative; font-family: Arial, ����; font-size: 13px; "><p class="storycategory" style="margin: 0px; padding: 0px; line-height: 16px; font-size: 12px; color: rgb(221, 221, 221); "><a href="http://www.open-open.com/news/category/5" class="category" style="margin: 0px 0.2em; padding: 1px 0px 2px; color: rgb(45, 131, 213); text-decoration: none; ">前端技术</a>&nbsp;<span class="tags" style="margin: 0px; padding: 1px 0px 2px 19px; background-image: url(http://www.open-open.com/news/images/post-icons.png); background-color: transparent; background-position: 0% 0%; background-repeat: no-repeat no-repeat; "><a href="http://www.open-open.com/news/tags/jQuery" style="margin: 0px 0.2em; padding: 0px; color: rgb(45, 131, 213); text-decoration: none; ">jQuery</a></span></p><h3 style="margin: 0.2em 0px; padding: 0px; font-size: 19px; ">8个实现在线浏览PDF文件的实用jQuery插件</h3><div class="postinfo" style="margin: 0px; padding: 0px; background-image: url(http://www.open-open.com/news/images/postinfo-bg.gif); background-color: rgb(226, 227, 227); position: relative; background-position: 0% 0%; background-repeat: repeat no-repeat; "><p style="margin: 0.4em 0px 1em; padding: 0.4em 0.8em; line-height: 18px; ">作者&nbsp;<a href="http://www.open-open.com/news/user/profile?uid=37924" style="margin: 0px; padding: 0px; color: rgb(45, 131, 213); text-decoration: none; ">jopen</a>&nbsp;2012-11-30 12:26:20</p></div></div><div class="postbody clearfix" style="margin: 0px; padding: 0px; line-height: 24px; font-size: 10.5pt; overflow: hidden; min-width: 0px; clear: left; font-family: Arial, ����; "><p style="margin: 0.4em 0px 1em; padding: 0px; line-height: 19px; "><span style="margin: 0px; padding: 0px; ">在web开发当中我们经常需要进行需要在线浏览PDf内容，在线嵌入动态pdf，传统的解决方法安装客户端PDF阅读器，如果是在谷歌是可以在线浏览的，因为他自身就带了一些插件，以前遇到这样的问题往往是费时又费力，很不好解决，</span></p><p style="margin: 0.4em 0px 1em; padding: 0px; line-height: 19px; "><span style="margin: 0px; padding: 0px; ">今天就给大家分享一系列使用javascript实现的pdf插件效果，无需借助第三方插件就可以实现在线浏览功能，非常实用。</span></p><h3 style="margin: 0.2em 0px; padding: 25px 0px 15px; font-size: 20px; "><a href="http://pdfobject.com/" style="margin: 15px 0px; padding: 0px; color: rgb(45, 131, 213); text-decoration: none; font-size: 14px; ">PDFObject</a></h3><p style="margin: 0.4em 0px 1em; padding: 0px; line-height: 19px; "><a href="http://pdfobject.com/" style="margin: 0px; padding: 0px; color: rgb(45, 131, 213); text-decoration: none; "><img alt=" 8个实现在线浏览PDF文件的实用jQuery插件" src="http://static.open-open.com/news/uploadImg/20121130/20121130122516_781.jpg" width="700" height="392" style="margin: 0px; padding: 0px; border: 0px; " /></a></p><p style="margin: 0.4em 0px 1em; padding: 0px; line-height: 19px; "><span style="margin: 0px; padding: 0px; "><span style="margin: 0px; padding: 0px; ">PDFobject可以帮助你在页面直接嵌入pdf文件，<span style="margin: 0px; padding: 0px; ">有时候有些项目需要动态地嵌入PDF文件。</span><span style="margin: 0px; padding: 0px; ">PDFObject</span><span style="margin: 0px; padding: 0px; ">为此而设计的，他能够快速和容易的嵌入PDF文件，</span><span style="margin: 0px; padding: 0px; ">PDFObject使用JavaScript来产生相同的符合标准的</span><span class="pre" style="margin: 0px; padding: 0px; "><span style="margin: 0px; padding: 0px; ">&nbsp;<span style="margin: 0px; padding: 0px; ">标记，然后插入</span><span class="pre" style="margin: 0px; padding: 0px; "><span style="margin: 0px; padding: 0px; ">&nbsp;<span style="margin: 0px; padding: 0px; "><span style="margin: 0px; padding: 0px; ">到您的HTML元素的选择。</span><span style="margin: 0px; padding: 0px; ">您可以填满整个浏览器窗口，或将PDF格式转换成一个</span></span><span class="pre" style="margin: 0px; padding: 0px; "><span style="margin: 0px; padding: 0px; "></span></span></span></span></span></span></span></span></p><div style="margin: 0px; padding: 0px; "><span style="margin: 0px; padding: 0px; ">或其他块级元素。</span><p style="margin: 0.4em 0px 1em; padding: 0px; line-height: 19px; "></p><h3 style="margin: 0.2em 0px; padding: 25px 0px 15px; font-size: 20px; "><a href="http://mozilla.github.com/pdf.js/" style="margin: 15px 0px; padding: 0px; color: rgb(45, 131, 213); text-decoration: none; font-size: 14px; ">pdf.js</a></h3><p style="margin: 0.4em 0px 1em; padding: 0px; line-height: 19px; "><a href="http://mozilla.github.com/pdf.js/" style="margin: 0px; padding: 0px; color: rgb(45, 131, 213); text-decoration: none; "><img alt=" 8个实现在线浏览PDF文件的实用jQuery插件" src="http://static.open-open.com/news/uploadImg/20121130/20121130122516_512.jpg" width="700" height="389" style="margin: 0px; padding: 0px; border: 0px; " /></a></p><p style="margin: 0.4em 0px 1em; padding: 0px; line-height: 19px; "><span style="margin: 0px; padding: 0px; ">和 Google Chrome 使用的</span><span style="margin: 0px; padding: 0px; ">源自 Foxit 的闭源 PDF 浏览插件</span><span style="margin: 0px; padding: 0px; ">不同，PDF.js 是</span><span style="margin: 0px; padding: 0px; ">基于开放的 HTML5 及 JavaScript 技术实现的开源产品</span><span style="margin: 0px; padding: 0px; ">。</span></p><p style="margin: 0.4em 0px 1em; padding: 0px; line-height: 19px; "><span style="margin: 0px; padding: 0px; ">pdf.js 是一个主要用于HTML5 平台上在线阅读PDF文档的小插件，基于JavaScript技术编写而成，无需任何本地技术支持。</span></p><p style="margin: 0.4em 0px 1em; padding: 0px; line-height: 19px; "><span style="margin: 0px; padding: 0px; "><span style="margin: 0px; padding: 0px; ">pdf.js是由Mozilla Labs发布的。</span><span style="margin: 0px; padding: 0px; ">他们的目标是创建一个通用的，基于标准的网络平台，能够解析和渲染PDF文件，并最终发布一个PDF阅读器扩展，<span style="margin: 0px; padding: 0px; ">毫无疑问 pdf.js 将被整合入 Gecko 成为 Firefox 的内嵌 PDF 阅读器，但是具体整合时间表尚未确定</span></span></span></p><h3 style="margin: 0.2em 0px; padding: 25px 0px 15px; font-size: 20px; "><a href="http://snapshotmedia.co.uk/blog/jspdf" style="margin: 15px 0px; padding: 0px; color: rgb(45, 131, 213); text-decoration: none; font-size: 14px; ">jsPDF</a></h3><p style="margin: 0.4em 0px 1em; padding: 0px; line-height: 19px; "><a href="http://snapshotmedia.co.uk/blog/jspdf" style="margin: 0px; padding: 0px; color: rgb(45, 131, 213); text-decoration: none; "><img alt=" 8个实现在线浏览PDF文件的实用jQuery插件" src="http://static.open-open.com/news/uploadImg/20121130/20121130122517_677.jpg" width="700" height="393" style="margin: 0px; padding: 0px; border: 0px; display: inline; " /></a></p><p style="margin: 0.4em 0px 1em; padding: 0px; line-height: 19px; "><span style="margin: 0px; padding: 0px; ">jsPDF 是一个使用Javascript语言生成PDF的开源库。</span><span style="margin: 0px; padding: 0px; ">你可以在Firefox插件，服务端脚本或是浏览器脚本中使用它。</span>客户端Safari 和 iPhone Safari 支持得最好,其次是Opera和Windows下的Firefox 3等。IE暂不支持。。</p><h3 style="margin: 0.2em 0px; padding: 25px 0px 15px; font-size: 20px; "><a href="http://jquery.malsup.com/media/" style="margin: 15px 0px; padding: 0px; color: rgb(45, 131, 213); text-decoration: none; font-size: 14px; ">jQuery Media Plugin</a></h3><p style="margin: 0.4em 0px 1em; padding: 0px; line-height: 19px; "><a href="http://jquery.malsup.com/media/" style="margin: 0px; padding: 0px; color: rgb(45, 131, 213); text-decoration: none; "><img alt=" 8个实现在线浏览PDF文件的实用jQuery插件" src="http://static.open-open.com/news/uploadImg/20121130/20121130122517_974.jpg" width="700" height="360" style="margin: 0px; padding: 0px; border: 0px; display: inline; " /></a></p><p style="margin: 0.4em 0px 1em; padding: 0px; line-height: 19px; "><span style="margin: 0px; padding: 0px; ">jQuery Media Plugin是一款基于jQuery的网页媒体播放器插件，它支持大部分的网络多媒体播放器和多媒体格式，比如：Flash, Windows Media Player, Real Player, Quicktime, MP3,Silverlight, PDF。它根据当前的脚本配置，自动将a标签替换成div，并生成object, embed甚至是iframe代码，至于生成object还是embed，jQuery Media会根据当前平台自动判别，因此兼容性方面非常出色<span style="margin: 0px; padding: 0px; text-align: left; font-family: Arial; line-height: 26px; color: rgb(54, 46, 43); ">下面这段代码是jQuery Media生成后的。</span></span></p><p style="margin: 0.4em 0px 1em; padding: 0px; line-height: 19px; ">&nbsp;</p><h3 style="margin: 0.2em 0px; padding: 25px 0px 15px; font-size: 20px; "><a href="https://docs.google.com/viewer" style="margin: 15px 0px; padding: 0px; color: rgb(45, 131, 213); text-decoration: none; font-size: 14px; ">Google Docs PDF viewer</a></h3><p style="margin: 0.4em 0px 1em; padding: 0px; line-height: 19px; "><a href="https://docs.google.com/viewer" style="margin: 0px; padding: 0px; color: rgb(45, 131, 213); text-decoration: none; "><img alt=" 8个实现在线浏览PDF文件的实用jQuery插件" src="http://static.open-open.com/news/uploadImg/20121130/20121130122517_464.jpg" width="700" height="389" style="margin: 0px; padding: 0px; border: 0px; display: inline; " /></a></p><h3 style="margin: 0.2em 0px; padding: 25px 0px 15px; font-size: 20px; "><a href="https://viewer.zoho.com/home.do" style="margin: 15px 0px; padding: 0px; color: rgb(45, 131, 213); text-decoration: none; font-size: 14px; ">ZOHO Viewer</a></h3><p style="margin: 0.4em 0px 1em; padding: 0px; line-height: 19px; "><a href="https://viewer.zoho.com/home.do" style="margin: 0px; padding: 0px; color: rgb(45, 131, 213); text-decoration: none; "><img alt=" 8个实现在线浏览PDF文件的实用jQuery插件" src="http://static.open-open.com/news/uploadImg/20121130/20121130122517_69.jpg" width="700" height="393" style="margin: 0px; padding: 0px; border: 0px; display: inline; " /></a></p><h3 style="margin: 0.2em 0px; padding: 25px 0px 15px; font-size: 20px; "><a href="http://anychart.com/products/stock/online-demos/html-js-samples-center/export-as-pdf-js-call/index.html" style="margin: 15px 0px; padding: 0px; color: rgb(45, 131, 213); text-decoration: none; font-size: 14px; ">Anychart：使用</a><a href="http://anychart.com/products/stock/online-demos/html-js-samples-center/export-as-pdf-js-call/index.html" style="margin: 15px 0px; padding: 0px; color: rgb(45, 131, 213); text-decoration: none; font-size: 14px; ">JavaScript</a><a href="http://anychart.com/products/stock/online-demos/html-js-samples-center/export-as-pdf-js-call/index.html" style="margin: 15px 0px; padding: 0px; color: rgb(45, 131, 213); text-decoration: none; font-size: 14px; ">导出PDF</a></h3><p style="margin: 0.4em 0px 1em; padding: 0px; line-height: 19px; "><a href="http://anychart.com/products/stock/online-demos/html-js-samples-center/export-as-pdf-js-call/index.html" style="margin: 0px; padding: 0px; color: rgb(45, 131, 213); text-decoration: none; "><img alt=" 8个实现在线浏览PDF文件的实用jQuery插件" src="http://static.open-open.com/news/uploadImg/20121130/20121130122517_224.jpg" width="700" height="388" style="margin: 0px; padding: 0px; border: 0px; display: inline; " /></a></p><p style="margin: 0.4em 0px 1em; padding: 0px; line-height: 19px; "><span style="margin: 0px; padding: 0px; ">下图可以导出为PNG或JPG格式的静态图像或嵌入式静态图像，图表或一个完全互动的功能图</span></p><p style="margin: 0.4em 0px 1em; padding: 0px; line-height: 19px; ">&nbsp;</p><h3 style="margin: 0.2em 0px; padding: 25px 0px 15px; font-size: 20px; "><a href="http://codecanyon.net/item/jquery-document-viewer/1732515?ref=bogdan_sandu" style="margin: 15px 0px; padding: 0px; color: rgb(45, 131, 213); text-decoration: none; font-size: 14px; ">jQuery Document Viewer</a></h3><p style="margin: 0.4em 0px 1em; padding: 0px; line-height: 19px; "><a href="http://codecanyon.net/item/jquery-document-viewer/1732515?ref=bogdan_sandu" style="margin: 0px; padding: 0px; color: rgb(45, 131, 213); text-decoration: none; "><img alt=" 8个实现在线浏览PDF文件的实用jQuery插件" src="http://static.open-open.com/news/uploadImg/20121130/20121130122517_373.jpg" width="700" height="393" style="margin: 0px; padding: 0px; border: 0px; display: inline; " /></a></p><p style="margin: 0.4em 0px 1em; padding: 0px; line-height: 19px; "><span style="margin: 0px; padding: 0px; "><span class="goog-text-highlight" style="margin: 0px; padding: 0px; "><span style="margin: 0px; padding: 0px; ">Document Viewer</span>是一个jQuery插件，可以让你在网页中直接查看多种文件格式。</span><span style="margin: 0px; padding: 0px; ">文档浏览器支持的文件格式：PDF文件，文本文件，代码，图像，音频，视频等。<br style="margin: 0px; padding: 0px; " /><br style="margin: 0px; padding: 0px; " />来自：<a href="http://www.cnblogs.com/58top/archive/2012/11/26/a-list-of-jquery-pdf-viewers-available-at-the-moment.html" target="_blank" style="margin: 0px; padding: 0px; color: rgb(45, 131, 213); text-decoration: none; ">http://www.cnblogs.com/58top/archive/2012/11/26/a-list-of-jquery-pdf-viewers-available-at-the-moment.html</a></span></span></p></div></div>', 1377856083, 1377856083);
